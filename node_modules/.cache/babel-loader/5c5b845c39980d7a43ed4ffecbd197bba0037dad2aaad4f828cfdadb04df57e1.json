{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sachi\\\\OneDrive\\\\Desktop\\\\weatherapp\\\\src\\\\components\\\\Chart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as Chartjs } from 'chart.js/auto';\nimport { UserData } from './Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = ({\n  toggle\n}) => {\n  _s();\n  let [map, setMap] = useState(UserData.map(data => {\n    return Math.floor(Math.random() * (999 - 100) + 100);\n  }));\n  if (toggle) {\n    let newMap = UserData.map(data => {\n      return Math.floor(Math.random() * (999 - 100) + 100);\n    });\n    setMap(newMap);\n  }\n  const data = {\n    labels: UserData.map(data => data.id),\n    datasets: [{\n      label: 'Temperature',\n      data: map,\n      borderColor: 'rgb(0,143,251)',\n      // Line color\n      borderWidth: 5,\n      fill: true,\n      backgroundColor: '  rgb(157,212,254)',\n      tension: 0.4,\n      pointRadius: 0\n    }]\n  };\n\n  // Chart options\n  const options = {\n    scales: {\n      y: {\n        displays: false,\n        beginAtZero: true\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"506px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Chart, \"riLfaeNajVTfSDr1ZS1tDxuE6xw=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useState","Line","Chart","Chartjs","UserData","jsxDEV","_jsxDEV","toggle","_s","map","setMap","data","Math","floor","random","newMap","labels","id","datasets","label","borderColor","borderWidth","fill","backgroundColor","tension","pointRadius","options","scales","y","displays","beginAtZero","plugins","legend","display","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sachi/OneDrive/Desktop/weatherapp/src/components/Chart.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {Chart as Chartjs } from 'chart.js/auto';\r\nimport { UserData } from './Data';\r\nconst Chart = ({toggle}) => {\r\n  let [map,setMap]=useState(UserData.map((data) => {\r\n    return  Math.floor(Math.random()*(999-100)+100)\r\n  }))\r\n  if(toggle)\r\n  {\r\n   let newMap =UserData.map((data) => {\r\n      return  Math.floor(Math.random()*(999-100)+100)\r\n    })\r\n    setMap(newMap)\r\n  }\r\n  const data = {\r\n    labels: UserData.map((data) => data.id),\r\n    datasets: [\r\n      {\r\n        label: 'Temperature',\r\n        data: map,\r\n        borderColor: 'rgb(0,143,251)', // Line color\r\n        borderWidth: 5,\r\n        fill: true, \r\n        backgroundColor: '  rgb(157,212,254)',\r\n        tension: 0.4,\r\n        pointRadius: 0\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart options\r\n  const options = {\r\n    scales: {\r\n      y: {\r\n        displays:false,\r\n        beginAtZero: true,\r\n        \r\n      },\r\n    },\r\n    plugins: {\r\n        legend: {\r\n          display:false\r\n        },\r\n      },\r\n     \r\n  };  \r\n  return (\r\n    <div>\r\n      <div style={{width: \"506px\"}}>\r\n      <Line data={data} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAAQC,KAAK,IAAIC,OAAO,QAAQ,eAAe;AAC/C,SAASC,QAAQ,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,MAAMJ,KAAK,GAAGA,CAAC;EAACK;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC1B,IAAI,CAACC,GAAG,EAACC,MAAM,CAAC,GAACV,QAAQ,CAACI,QAAQ,CAACK,GAAG,CAAEE,IAAI,IAAK;IAC/C,OAAQC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAE,GAAG,GAAC,GAAG,CAAC,GAAC,GAAG,CAAC;EACjD,CAAC,CAAC,CAAC;EACH,IAAGP,MAAM,EACT;IACC,IAAIQ,MAAM,GAAEX,QAAQ,CAACK,GAAG,CAAEE,IAAI,IAAK;MAChC,OAAQC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAE,GAAG,GAAC,GAAG,CAAC,GAAC,GAAG,CAAC;IACjD,CAAC,CAAC;IACFJ,MAAM,CAACK,MAAM,CAAC;EAChB;EACA,MAAMJ,IAAI,GAAG;IACXK,MAAM,EAAEZ,QAAQ,CAACK,GAAG,CAAEE,IAAI,IAAKA,IAAI,CAACM,EAAE,CAAC;IACvCC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,aAAa;MACpBR,IAAI,EAAEF,GAAG;MACTW,WAAW,EAAE,gBAAgB;MAAE;MAC/BC,WAAW,EAAE,CAAC;MACdC,IAAI,EAAE,IAAI;MACVC,eAAe,EAAE,oBAAoB;MACrCC,OAAO,EAAE,GAAG;MACZC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;;EAED;EACA,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,QAAQ,EAAC,KAAK;QACdC,WAAW,EAAE;MAEf;IACF,CAAC;IACDC,OAAO,EAAE;MACLC,MAAM,EAAE;QACNC,OAAO,EAAC;MACV;IACF;EAEJ,CAAC;EACD,oBACE3B,OAAA;IAAA4B,QAAA,eACE5B,OAAA;MAAK6B,KAAK,EAAE;QAACC,KAAK,EAAE;MAAO,CAAE;MAAAF,QAAA,eAC7B5B,OAAA,CAACL,IAAI;QAACU,IAAI,EAAEA,IAAK;QAACe,OAAO,EAAEA;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CAlDIN,KAAK;AAAAuC,EAAA,GAALvC,KAAK;AAoDX,eAAeA,KAAK;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}