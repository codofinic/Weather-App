{"ast":null,"code":"/* eslint-disable react-hooks/exhaustive-deps */import{useState,useEffect}from\"react\";import'./Style/Weather.css';import OneWeek from\"./OneWeek\";import Chart from\"./Chart\";import PressureHumidity from\"./PressureHumidity\";import Sunrise from\"./Sunrise\";import{deflt}from\"./Default\";import SunriseSunset from\"./SunriseSunset\";import Temperature from\"../Temperature\";import{Location}from\"./Location\";import{Search}from\"./Search\";import{UserData}from\"./Data\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const AutoComplete=_ref=>{let{options}=_ref;const[value,setValue]=useState(\"Pune, Maharashtra\");const[showSuggestions,setShowSuggestions]=useState(false);let[searchValue,setSearch]=useState(\"\");let[weatherData,setWeatherData]=useState(deflt);useEffect(()=>{async function fetchData(){let data=await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(searchValue.toLowerCase(),\"&appid=dc17751ea2e801137b2c8eeb5a3111d8\"));data=await data.json();console.log(weatherData);setWeatherData(data);}if(searchValue.length!==0)fetchData();},[searchValue]);const suggestions=options.filter(_ref2=>{let{cityName}=_ref2;return cityName.toLowerCase().includes(value.toLowerCase());});const handleChange=event=>{setValue(event.target.value);};const handleSuggestionClick=suggetion=>{setValue(suggetion);setSearch(suggetion);setShowSuggestions(false);};console.log();console.log(weatherData);console.log(weatherData.main.pressure);return/*#__PURE__*/_jsxs(\"div\",{className:\"autocomplete\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-box\",children:[/*#__PURE__*/_jsx(Location,{}),/*#__PURE__*/_jsx(\"input\",{value:value,onChange:handleChange,placeholder:\"Search\",onFocus:()=>{setShowSuggestions(true);}}),/*#__PURE__*/_jsx(Search,{})]}),showSuggestions&&/*#__PURE__*/_jsx(\"ul\",{className:\"suggestions\",children:suggestions.map(_ref3=>{let{cityName,cityState,Celicus,cloud,nature,img}=_ref3;return/*#__PURE__*/_jsxs(\"li\",{onClick:()=>handleSuggestionClick(cityName),children:[\" \",/*#__PURE__*/_jsxs(\"span\",{children:[\" \",cityName,\",\",cityState]}),\" \",/*#__PURE__*/_jsxs(\"span\",{className:\"simg\",children:[Celicus,\" \",cloud,/*#__PURE__*/_jsx(\"img\",{src:img,height:\"30px\",width:\"30px\",alt:\"\"})]})]},cityName);})}),/*#__PURE__*/_jsx(OneWeek,{}),/*#__PURE__*/_jsx(Temperature,{main:weatherData.main}),/*#__PURE__*/_jsx(Chart,{}),/*#__PURE__*/_jsx(PressureHumidity,{pressure:weatherData.main.pressure,humidity:weatherData.main.humidity}),/*#__PURE__*/_jsx(SunriseSunset,{UserData:weatherData.sys}),/*#__PURE__*/_jsx(Sunrise,{UserData:weatherData.sys})]});};export default AutoComplete;","map":{"version":3,"names":["useState","useEffect","OneWeek","Chart","PressureHumidity","Sunrise","deflt","SunriseSunset","Temperature","Location","Search","UserData","jsx","_jsx","jsxs","_jsxs","AutoComplete","_ref","options","value","setValue","showSuggestions","setShowSuggestions","searchValue","setSearch","weatherData","setWeatherData","fetchData","data","fetch","concat","toLowerCase","json","console","log","length","suggestions","filter","_ref2","cityName","includes","handleChange","event","target","handleSuggestionClick","suggetion","main","pressure","className","children","onChange","placeholder","onFocus","map","_ref3","cityState","Celicus","cloud","nature","img","onClick","src","height","width","alt","humidity","sys"],"sources":["C:/Users/sachi/OneDrive/Desktop/weatherapp/src/components/AutoComplete.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useEffect } from \"react\";\r\nimport './Style/Weather.css'\r\nimport OneWeek from \"./OneWeek\";\r\nimport Chart from \"./Chart\";\r\nimport PressureHumidity from \"./PressureHumidity\";\r\nimport Sunrise from \"./Sunrise\";\r\nimport { deflt } from \"./Default\";\r\nimport SunriseSunset from \"./SunriseSunset\";\r\nimport Temperature from \"../Temperature\";\r\nimport { Location } from \"./Location\";\r\nimport { Search } from \"./Search\";\r\nimport { UserData } from \"./Data\";\r\n\r\nconst AutoComplete = ({ options}) => {\r\n    const [value, setValue] = useState(\"Pune, Maharashtra\");\r\n    const [showSuggestions, setShowSuggestions] = useState(false);\r\n    let [searchValue,setSearch]=useState(\"\")\r\n    let [weatherData,setWeatherData]=useState(deflt)\r\n    \r\n    useEffect(()=>{\r\n          async function fetchData(){\r\n               let data=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${searchValue.toLowerCase()}&appid=dc17751ea2e801137b2c8eeb5a3111d8`);\r\n               data=await data.json();\r\n               console.log(weatherData);\r\n                setWeatherData(data)\r\n          }\r\n          if(searchValue.length!==0)\r\n          fetchData()\r\n    },[searchValue])\r\n    const suggestions = options.filter(({cityName}) => cityName.toLowerCase().includes(value.toLowerCase()))\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    }\r\n\r\n    const handleSuggestionClick = (suggetion) => {\r\n        setValue(suggetion);\r\n        setSearch(suggetion);\r\n        setShowSuggestions(false);\r\n    }\r\nconsole.log();\r\nconsole.log(weatherData);\r\nconsole.log(weatherData.main.pressure);\r\n    return (\r\n        <div className=\"autocomplete\">\r\n           <div className=\"input-box\"> \r\n            <Location/>\r\n            <input\r\n                value={value}\r\n                onChange={handleChange}\r\n                placeholder=\"Search\"\r\n                onFocus={() => {\r\n                    setShowSuggestions(true)\r\n                }} />\r\n                <Search/>\r\n                </div>\r\n             \r\n            {showSuggestions && (\r\n                <ul className=\"suggestions\">\r\n                    {suggestions.map(({cityName,cityState,Celicus,cloud,nature,img}) => (\r\n                        <li  onClick={() => handleSuggestionClick(cityName)} key={cityName}> <span> {cityName},{cityState}</span> <span className=\"simg\">{Celicus} {cloud}<img src={img}height={\"30px\"} width={\"30px\"} alt=\"\" /></span></li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n\r\n          <OneWeek/>\r\n         < Temperature main={weatherData.main}/>\r\n          <Chart />\r\n          <PressureHumidity pressure={weatherData.main.pressure} humidity={weatherData.main.humidity}/>\r\n          <SunriseSunset UserData={weatherData.sys}/>\r\n         <Sunrise UserData={weatherData.sys}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AutoComplete;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}