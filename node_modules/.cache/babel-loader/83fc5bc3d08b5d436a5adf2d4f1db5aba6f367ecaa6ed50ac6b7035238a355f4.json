{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sachi\\\\OneDrive\\\\Desktop\\\\weatherapp\\\\src\\\\components\\\\AutoComplete.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from \"react\";\nimport './Style/Weather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoComplete = ({\n  options\n}) => {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  let [searchValue, setSearch] = useState(\"\");\n  let [weatherData, setWeatherData] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      let data = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${searchValue.toLowerCase()}&appid=dc17751ea2e801137b2c8eeb5a3111d8`);\n      data = await data.json();\n      console.log(weatherData);\n      setWeatherData(data);\n    }\n    if (searchValue.length !== 0) fetchData();\n  }, [searchValue]);\n  const suggestions = options.filter(({\n    cityName\n  }) => cityName.toLowerCase().includes(value.toLowerCase()));\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n  const handleSuggestionClick = suggetion => {\n    setValue(suggetion);\n    setSearch(suggetion);\n    setShowSuggestions(false);\n  };\n  console.log(value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"autocomplete\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: value,\n      onChange: handleChange,\n      placeholder: \"Search\",\n      onFocus: () => {\n        setShowSuggestions(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), showSuggestions && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"suggestions\",\n      children: suggestions.map(({\n        cityName,\n        cityState,\n        Celicus,\n        cloud,\n        nature\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSuggestionClick(cityName),\n        children: [\" \", cityName, \",\", cityState, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [Celicus, \" \", cloud]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 116\n        }, this)]\n      }, cityName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), Object.keys(weatherData).length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"hello react js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 51\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(AutoComplete, \"hER581w03zY9bIadUCmhobPwbZ8=\");\n_c = AutoComplete;\nexport default AutoComplete;\nvar _c;\n$RefreshReg$(_c, \"AutoComplete\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","AutoComplete","options","_s","value","setValue","showSuggestions","setShowSuggestions","searchValue","setSearch","weatherData","setWeatherData","fetchData","data","fetch","toLowerCase","json","console","log","length","suggestions","filter","cityName","includes","handleChange","event","target","handleSuggestionClick","suggetion","className","children","onChange","placeholder","onFocus","fileName","_jsxFileName","lineNumber","columnNumber","map","cityState","Celicus","cloud","nature","onClick","Object","keys","_c","$RefreshReg$"],"sources":["C:/Users/sachi/OneDrive/Desktop/weatherapp/src/components/AutoComplete.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useEffect } from \"react\";\r\nimport './Style/Weather.css'\r\nconst AutoComplete = ({ options}) => {\r\n    const [value, setValue] = useState(\"\");\r\n    const [showSuggestions, setShowSuggestions] = useState(false);\r\n    let [searchValue,setSearch]=useState(\"\")\r\n    let [weatherData,setWeatherData]=useState({})\r\n    useEffect(()=>{\r\n          async function fetchData(){\r\n               let data=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${searchValue.toLowerCase()}&appid=dc17751ea2e801137b2c8eeb5a3111d8`);\r\n               data=await data.json();\r\n               console.log(weatherData);\r\n                setWeatherData(data)\r\n          }\r\n          if(searchValue.length!==0)\r\n          fetchData()\r\n    },[searchValue])\r\n    const suggestions = options.filter(({cityName}) => cityName.toLowerCase().includes(value.toLowerCase()))\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    }\r\n\r\n    const handleSuggestionClick = (suggetion) => {\r\n        setValue(suggetion);\r\n        setSearch(suggetion);\r\n        setShowSuggestions(false);\r\n    }\r\nconsole.log(value);\r\n    return (\r\n        <div className=\"autocomplete\">\r\n            <input\r\n                value={value}\r\n                onChange={handleChange}\r\n                placeholder=\"Search\"\r\n                onFocus={() => {\r\n                    setShowSuggestions(true)}}\r\n            />\r\n            {showSuggestions && (\r\n                <ul className=\"suggestions\">\r\n                    {suggestions.map(({cityName,cityState,Celicus,cloud,nature}) => (\r\n                        <li onClick={() => handleSuggestionClick(cityName)} key={cityName}> {cityName},{cityState} <span>{Celicus} {cloud}</span></li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n          \r\n            {Object.keys(weatherData).length!==0&&<div>hello react js</div>}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AutoComplete;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}