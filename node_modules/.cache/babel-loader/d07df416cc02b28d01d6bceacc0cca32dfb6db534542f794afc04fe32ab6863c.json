{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sachi\\\\OneDrive\\\\Desktop\\\\weatherapp\\\\src\\\\components\\\\Chart.jsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as Chartjs } from 'chart.js/auto';\nimport { UserData } from './Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = ({\n  toggle\n}) => {\n  console.log(toggle);\n  if (toggle) {\n    const data = {\n      labels: UserData.map(data => data.id),\n      datasets: [{\n        label: 'Temperature',\n        data: UserData.map(data => {\n          return Math.floor(Math.random() * (999 - 100) + 100);\n        }),\n        borderColor: 'rgb(0,143,251)',\n        // Line color\n        borderWidth: 5,\n        fill: true,\n        backgroundColor: '  rgb(157,212,254)',\n        tension: 0.4,\n        pointRadius: 0\n      }]\n    };\n\n    // Chart options\n    const options = {\n      scales: {\n        y: {\n          displays: false,\n          beginAtZero: true\n        }\n      },\n      plugins: {\n        legend: {\n          display: false\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"376px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this);\n  } else {\n    const data = {\n      labels: UserData.map(data => data.id),\n      datasets: [{\n        label: 'Temperature',\n        data: [233, 233, 543, 443, 243, 765, 332, 234, 543, 244, 114, 545, 632, 654],\n        borderColor: 'rgb(0,143,251)',\n        // Line color\n        borderWidth: 5,\n        fill: true,\n        backgroundColor: '  rgb(157,212,254)',\n        tension: 0.4,\n        pointRadius: 0\n      }]\n    };\n\n    // Chart options\n    const options = {\n      scales: {\n        y: {\n          displays: false,\n          beginAtZero: true\n        }\n      },\n      plugins: {\n        legend: {\n          display: false\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"376px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this);\n  }\n};\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","Line","Chart","Chartjs","UserData","jsxDEV","_jsxDEV","toggle","console","log","data","labels","map","id","datasets","label","Math","floor","random","borderColor","borderWidth","fill","backgroundColor","tension","pointRadius","options","scales","y","displays","beginAtZero","plugins","legend","display","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sachi/OneDrive/Desktop/weatherapp/src/components/Chart.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {Chart as Chartjs } from 'chart.js/auto';\r\nimport { UserData } from './Data';\r\nconst Chart = ({toggle}) => {\r\n  console.log(toggle);\r\n  if(toggle){\r\n  const data = {\r\n    labels: UserData.map((data) => data.id),\r\n    datasets: [\r\n      {\r\n        label: 'Temperature',\r\n        data: UserData.map((data) => {\r\n          return  Math.floor(Math.random()*(999-100)+100)\r\n        }),\r\n        borderColor: 'rgb(0,143,251)', // Line color\r\n        borderWidth: 5,\r\n        fill: true, \r\n        backgroundColor: '  rgb(157,212,254)',\r\n        tension: 0.4,\r\n        pointRadius: 0\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart options\r\n  const options = {\r\n    scales: {\r\n      y: {\r\n        displays:false,\r\n        beginAtZero: true,\r\n        \r\n      },\r\n    },\r\n    plugins: {\r\n        legend: {\r\n          display:false\r\n        },\r\n      },\r\n     \r\n  };  \r\n  return (\r\n    <div>\r\n      <div style={{width: \"376px\"}}>\r\n      <Line data={data} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n  }\r\n  else{\r\n  const data = {\r\n    labels: UserData.map((data) => data.id),\r\n    datasets: [\r\n      {\r\n        label: 'Temperature',\r\n        data:[233,233,543,443,243,765,332,234,543,244,114,545,632,654],\r\n        borderColor: 'rgb(0,143,251)', // Line color\r\n        borderWidth: 5,\r\n        fill: true, \r\n        backgroundColor: '  rgb(157,212,254)',\r\n        tension: 0.4,\r\n        pointRadius: 0\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart options\r\n  const options = {\r\n    scales: {\r\n      y: {\r\n        displays:false,\r\n        beginAtZero: true,\r\n        \r\n      },\r\n    },\r\n    plugins: {\r\n        legend: {\r\n          display:false\r\n        },\r\n      },\r\n     \r\n  };  \r\n  return (\r\n    <div>\r\n      <div style={{width: \"376px\"}}>\r\n      <Line data={data} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n  }\r\n};\r\n\r\nexport default Chart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAAQC,KAAK,IAAIC,OAAO,QAAQ,eAAe;AAC/C,SAASC,QAAQ,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,MAAMJ,KAAK,GAAGA,CAAC;EAACK;AAAM,CAAC,KAAK;EAC1BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,IAAGA,MAAM,EAAC;IACV,MAAMG,IAAI,GAAG;MACXC,MAAM,EAAEP,QAAQ,CAACQ,GAAG,CAAEF,IAAI,IAAKA,IAAI,CAACG,EAAE,CAAC;MACvCC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,aAAa;QACpBL,IAAI,EAAEN,QAAQ,CAACQ,GAAG,CAAEF,IAAI,IAAK;UAC3B,OAAQM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAE,GAAG,GAAC,GAAG,CAAC,GAAC,GAAG,CAAC;QACjD,CAAC,CAAC;QACFC,WAAW,EAAE,gBAAgB;QAAE;QAC/BC,WAAW,EAAE,CAAC;QACdC,IAAI,EAAE,IAAI;QACVC,eAAe,EAAE,oBAAoB;QACrCC,OAAO,EAAE,GAAG;QACZC,WAAW,EAAE;MACf,CAAC;IAEL,CAAC;;IAED;IACA,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,QAAQ,EAAC,KAAK;UACdC,WAAW,EAAE;QAEf;MACF,CAAC;MACDC,OAAO,EAAE;QACLC,MAAM,EAAE;UACNC,OAAO,EAAC;QACV;MACF;IAEJ,CAAC;IACD,oBACE1B,OAAA;MAAA2B,QAAA,eACE3B,OAAA;QAAK4B,KAAK,EAAE;UAACC,KAAK,EAAE;QAAO,CAAE;QAAAF,QAAA,eAC7B3B,OAAA,CAACL,IAAI;UAACS,IAAI,EAAEA,IAAK;UAACe,OAAO,EAAEA;QAAQ;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAER,CAAC,MACG;IACJ,MAAM7B,IAAI,GAAG;MACXC,MAAM,EAAEP,QAAQ,CAACQ,GAAG,CAAEF,IAAI,IAAKA,IAAI,CAACG,EAAE,CAAC;MACvCC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,aAAa;QACpBL,IAAI,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;QAC9DS,WAAW,EAAE,gBAAgB;QAAE;QAC/BC,WAAW,EAAE,CAAC;QACdC,IAAI,EAAE,IAAI;QACVC,eAAe,EAAE,oBAAoB;QACrCC,OAAO,EAAE,GAAG;QACZC,WAAW,EAAE;MACf,CAAC;IAEL,CAAC;;IAED;IACA,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,QAAQ,EAAC,KAAK;UACdC,WAAW,EAAE;QAEf;MACF,CAAC;MACDC,OAAO,EAAE;QACLC,MAAM,EAAE;UACNC,OAAO,EAAC;QACV;MACF;IAEJ,CAAC;IACD,oBACE1B,OAAA;MAAA2B,QAAA,eACE3B,OAAA;QAAK4B,KAAK,EAAE;UAACC,KAAK,EAAE;QAAO,CAAE;QAAAF,QAAA,eAC7B3B,OAAA,CAACL,IAAI;UAACS,IAAI,EAAEA,IAAK;UAACe,OAAO,EAAEA;QAAQ;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAER;AACF,CAAC;AAACC,EAAA,GAtFItC,KAAK;AAwFX,eAAeA,KAAK;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}